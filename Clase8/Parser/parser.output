Grammar

    0 $accept: START END

    1 START: MAIN
    2      | LIST_FUNC MAIN

    3 LIST_FUNC: LIST_FUNC FUNCTION
    4          | FUNCTION

    5 FUNCTION: TYPES ID PARA FUNC_LIST PARC LLAVA LIST_INST LLAVC
    6         | TYPES ID PARA PARC LLAVA LIST_INST LLAVC

    7 FUNC_LIST: FUNC_LIST ',' TYPES ID
    8          | TYPES ID

    9 MAIN: VOID RMAIN PARA PARC LLAVA LIST_INST LLAVC

   10 LIST_INST: LIST_INST INSTRUCTION
   11          | INSTRUCTION

   12 INSTRUCTION: PRINT ';'
   13            | DECLARATION ';'
   14            | ASSIGNMENT ';'
   15            | IF
   16            | WHILE
   17            | STRUCT_DECLARATION
   18            | STRUCT_CREATION
   19            | CALL_INST
   20            | RETURN ';'

   21 RETURN: RRETURN EXP
   22       | RRETURN

   23 PRINT: PRINTF PARA EXP PARC

   24 DECLARATION: TYPES ID '=' EXP

   25 ASSIGNMENT: ID '=' EXP

   26 IF: RIF EXP LLAVA LIST_INST LLAVC ELSEIF_LIST ELSE
   27   | RIF EXP LLAVA LIST_INST LLAVC ELSE

   28 ELSEIF_LIST: ELSEIF_LIST ELSEIF
   29            | ELSEIF

   30 ELSEIF: RELSE RIF EXP LLAVA LIST_INST LLAVC

   31 ELSE: RELSE LLAVA LIST_INST LLAVC
   32     | %empty

   33 WHILE: RWHILE EXP LLAVA LIST_INST LLAVC

   34 STRUCT_DECLARATION: STRUCT ID LLAVA DEC_LIST LLAVC

   35 DEC_LIST: DEC_LIST TYPES ID ';'
   36         | TYPES ID ';'

   37 STRUCT_CREATION: STRUCT ID ID '=' LLAVA EXP_LIST LLAVC

   38 EXP_LIST: EXP_LIST ',' EXP
   39         | EXP

   40 TYPES: INT
   41      | TSTRING
   42      | BOOLEAN
   43      | VOID
   44      | ARRAY

   45 EXP: EXP SUMA EXP
   46    | EXP MENOS EXP
   47    | EXP POR EXP
   48    | EXP DIV EXP
   49    | EXP MEN EXP
   50    | EXP MAY EXP
   51    | EXP MEN_IG EXP
   52    | EXP MAY_IG EXP
   53    | EXP DIF EXP
   54    | EXP IG EXP
   55    | EXP AND EXP
   56    | EXP OR EXP
   57    | PARA EXP PARC
   58    | LLAVA EXP_LIST LLAVC
   59    | PRIMITIVE
   60    | CALL_EXP

   61 PRIMITIVE: NUMERO
   62          | STRING
   63          | BOOL
   64          | LIST_ARR

   65 BOOL: RTRUE
   66     | RFALSE

   67 LIST_ARR: LIST_ARR CORA EXP CORC
   68         | LIST_ARR '.' ID
   69         | ID

   70 CALL_EXP: ID PARA EXP_LIST PARC
   71         | ID PARA PARC

   72 CALL_INST: ID PARA EXP_LIST PARC ';'
   73          | ID PARA PARC ';'


Terminals, with rules where they appear

    END (0) 0
    ',' (44) 7 38
    '.' (46) 68
    ';' (59) 12 13 14 20 35 36 72 73
    '=' (61) 24 25 37
    error (256)
    NUMERO <std::string> (258) 61
    ID <std::string> (259) 5 6 7 8 24 25 34 35 36 37 68 69 70 71 72 73
    STRING <std::string> (260) 62
    SUMA <std::string> (261) 45
    MENOS <std::string> (262) 46
    POR <std::string> (263) 47
    DIV <std::string> (264) 48
    PRINTF <std::string> (265) 23
    RIF <std::string> (266) 26 27 30
    RELSE <std::string> (267) 30 31
    VOID <std::string> (268) 9 43
    INT <std::string> (269) 40
    TSTRING <std::string> (270) 41
    BOOLEAN <std::string> (271) 42
    PARA <std::string> (272) 5 6 9 23 57 70 71 72 73
    PARC <std::string> (273) 5 6 9 23 57 70 71 72 73
    RMAIN <std::string> (274) 9
    LLAVA <std::string> (275) 5 6 9 26 27 30 31 33 34 37 58
    LLAVC <std::string> (276) 5 6 9 26 27 30 31 33 34 37 58
    RTRUE <std::string> (277) 65
    RFALSE <std::string> (278) 66
    CORA <std::string> (279) 67
    CORC <std::string> (280) 67
    MAY <std::string> (281) 50
    MEN <std::string> (282) 49
    MAY_IG <std::string> (283) 52
    MEN_IG <std::string> (284) 51
    DIF <std::string> (285) 53
    IG <std::string> (286) 54
    AND <std::string> (287) 55
    OR <std::string> (288) 56
    STRUCT <std::string> (289) 34 37
    RRETURN <std::string> (290) 21 22
    ARRAY <std::string> (291) 44
    RWHILE <std::string> (292) 33


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    START <func_main*> (43)
        on left: 1 2
        on right: 0
    LIST_FUNC <list_instruction*> (44)
        on left: 3 4
        on right: 2 3
    FUNCTION <instruction*> (45)
        on left: 5 6
        on right: 3 4
    FUNC_LIST <map_struct_dec*> (46)
        on left: 7 8
        on right: 5 7
    MAIN <func_main*> (47)
        on left: 9
        on right: 1 2
    LIST_INST <list_instruction*> (48)
        on left: 10 11
        on right: 5 6 9 10 26 27 30 31 33
    INSTRUCTION <instruction*> (49)
        on left: 12 13 14 15 16 17 18 19 20
        on right: 10 11
    RETURN <instruction*> (50)
        on left: 21 22
        on right: 20
    PRINT <instruction*> (51)
        on left: 23
        on right: 12
    DECLARATION <instruction*> (52)
        on left: 24
        on right: 13
    ASSIGNMENT <instruction*> (53)
        on left: 25
        on right: 14
    IF <instruction*> (54)
        on left: 26 27
        on right: 15
    ELSEIF_LIST <list_instruction*> (55)
        on left: 28 29
        on right: 26 28
    ELSEIF <instruction*> (56)
        on left: 30
        on right: 28 29
    ELSE <list_instruction*> (57)
        on left: 31 32
        on right: 26 27
    WHILE <instruction*> (58)
        on left: 33
        on right: 16
    STRUCT_DECLARATION <instruction*> (59)
        on left: 34
        on right: 17
    DEC_LIST <map_struct_dec*> (60)
        on left: 35 36
        on right: 34 35
    STRUCT_CREATION <instruction*> (61)
        on left: 37
        on right: 18
    EXP_LIST <list_expression*> (62)
        on left: 38 39
        on right: 37 38 58 70 72
    TYPES <TipoDato> (63)
        on left: 40 41 42 43 44
        on right: 5 6 7 8 24 35 36
    EXP <expression*> (64)
        on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
        on right: 21 23 24 25 26 27 30 33 38 39 45 46 47 48 49 50 51 52 53 54 55 56 57 67
    PRIMITIVE <expression*> (65)
        on left: 61 62 63 64
        on right: 59
    BOOL <expression*> (66)
        on left: 65 66
        on right: 63
    LIST_ARR <expression*> (67)
        on left: 67 68 69
        on right: 64 67 68
    CALL_EXP <expression*> (68)
        on left: 70 71
        on right: 60
    CALL_INST <instruction*> (69)
        on left: 72 73
        on right: 19


State 0

    0 $accept: . START END

    VOID     shift, and go to state 1
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    ARRAY    shift, and go to state 5

    START      go to state 6
    LIST_FUNC  go to state 7
    FUNCTION   go to state 8
    MAIN       go to state 9
    TYPES      go to state 10


State 1

    9 MAIN: VOID . RMAIN PARA PARC LLAVA LIST_INST LLAVC
   43 TYPES: VOID .

    RMAIN  shift, and go to state 11

    $default  reduce using rule 43 (TYPES)


State 2

   40 TYPES: INT .

    $default  reduce using rule 40 (TYPES)


State 3

   41 TYPES: TSTRING .

    $default  reduce using rule 41 (TYPES)


State 4

   42 TYPES: BOOLEAN .

    $default  reduce using rule 42 (TYPES)


State 5

   44 TYPES: ARRAY .

    $default  reduce using rule 44 (TYPES)


State 6

    0 $accept: START . END

    END  shift, and go to state 12


State 7

    2 START: LIST_FUNC . MAIN
    3 LIST_FUNC: LIST_FUNC . FUNCTION

    VOID     shift, and go to state 1
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    ARRAY    shift, and go to state 5

    FUNCTION  go to state 13
    MAIN      go to state 14
    TYPES     go to state 10


State 8

    4 LIST_FUNC: FUNCTION .

    $default  reduce using rule 4 (LIST_FUNC)


State 9

    1 START: MAIN .

    $default  reduce using rule 1 (START)


State 10

    5 FUNCTION: TYPES . ID PARA FUNC_LIST PARC LLAVA LIST_INST LLAVC
    6         | TYPES . ID PARA PARC LLAVA LIST_INST LLAVC

    ID  shift, and go to state 15


State 11

    9 MAIN: VOID RMAIN . PARA PARC LLAVA LIST_INST LLAVC

    PARA  shift, and go to state 16


State 12

    0 $accept: START END .

    $default  accept


State 13

    3 LIST_FUNC: LIST_FUNC FUNCTION .

    $default  reduce using rule 3 (LIST_FUNC)


State 14

    2 START: LIST_FUNC MAIN .

    $default  reduce using rule 2 (START)


State 15

    5 FUNCTION: TYPES ID . PARA FUNC_LIST PARC LLAVA LIST_INST LLAVC
    6         | TYPES ID . PARA PARC LLAVA LIST_INST LLAVC

    PARA  shift, and go to state 17


State 16

    9 MAIN: VOID RMAIN PARA . PARC LLAVA LIST_INST LLAVC

    PARC  shift, and go to state 18


State 17

    5 FUNCTION: TYPES ID PARA . FUNC_LIST PARC LLAVA LIST_INST LLAVC
    6         | TYPES ID PARA . PARC LLAVA LIST_INST LLAVC

    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    PARC     shift, and go to state 20
    ARRAY    shift, and go to state 5

    FUNC_LIST  go to state 21
    TYPES      go to state 22


State 18

    9 MAIN: VOID RMAIN PARA PARC . LLAVA LIST_INST LLAVC

    LLAVA  shift, and go to state 23


State 19

   43 TYPES: VOID .

    $default  reduce using rule 43 (TYPES)


State 20

    6 FUNCTION: TYPES ID PARA PARC . LLAVA LIST_INST LLAVC

    LLAVA  shift, and go to state 24


State 21

    5 FUNCTION: TYPES ID PARA FUNC_LIST . PARC LLAVA LIST_INST LLAVC
    7 FUNC_LIST: FUNC_LIST . ',' TYPES ID

    PARC  shift, and go to state 25
    ','   shift, and go to state 26


State 22

    8 FUNC_LIST: TYPES . ID

    ID  shift, and go to state 27


State 23

    9 MAIN: VOID RMAIN PARA PARC LLAVA . LIST_INST LLAVC

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    LIST_INST           go to state 34
    INSTRUCTION         go to state 35
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 24

    6 FUNCTION: TYPES ID PARA PARC LLAVA . LIST_INST LLAVC

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    LIST_INST           go to state 46
    INSTRUCTION         go to state 35
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 25

    5 FUNCTION: TYPES ID PARA FUNC_LIST PARC . LLAVA LIST_INST LLAVC

    LLAVA  shift, and go to state 47


State 26

    7 FUNC_LIST: FUNC_LIST ',' . TYPES ID

    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    ARRAY    shift, and go to state 5

    TYPES  go to state 48


State 27

    8 FUNC_LIST: TYPES ID .

    $default  reduce using rule 8 (FUNC_LIST)


State 28

   25 ASSIGNMENT: ID . '=' EXP
   72 CALL_INST: ID . PARA EXP_LIST PARC ';'
   73          | ID . PARA PARC ';'

    PARA  shift, and go to state 49
    '='   shift, and go to state 50


State 29

   23 PRINT: PRINTF . PARA EXP PARC

    PARA  shift, and go to state 51


State 30

   26 IF: RIF . EXP LLAVA LIST_INST LLAVC ELSEIF_LIST ELSE
   27   | RIF . EXP LLAVA LIST_INST LLAVC ELSE

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 59
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 31

   34 STRUCT_DECLARATION: STRUCT . ID LLAVA DEC_LIST LLAVC
   37 STRUCT_CREATION: STRUCT . ID ID '=' LLAVA EXP_LIST LLAVC

    ID  shift, and go to state 64


State 32

   21 RETURN: RRETURN . EXP
   22       | RRETURN .

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    $default  reduce using rule 22 (RETURN)

    EXP        go to state 65
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 33

   33 WHILE: RWHILE . EXP LLAVA LIST_INST LLAVC

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 66
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 34

    9 MAIN: VOID RMAIN PARA PARC LLAVA LIST_INST . LLAVC
   10 LIST_INST: LIST_INST . INSTRUCTION

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    LLAVC    shift, and go to state 67
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    INSTRUCTION         go to state 68
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 35

   11 LIST_INST: INSTRUCTION .

    $default  reduce using rule 11 (LIST_INST)


State 36

   20 INSTRUCTION: RETURN . ';'

    ';'  shift, and go to state 69


State 37

   12 INSTRUCTION: PRINT . ';'

    ';'  shift, and go to state 70


State 38

   13 INSTRUCTION: DECLARATION . ';'

    ';'  shift, and go to state 71


State 39

   14 INSTRUCTION: ASSIGNMENT . ';'

    ';'  shift, and go to state 72


State 40

   15 INSTRUCTION: IF .

    $default  reduce using rule 15 (INSTRUCTION)


State 41

   16 INSTRUCTION: WHILE .

    $default  reduce using rule 16 (INSTRUCTION)


State 42

   17 INSTRUCTION: STRUCT_DECLARATION .

    $default  reduce using rule 17 (INSTRUCTION)


State 43

   18 INSTRUCTION: STRUCT_CREATION .

    $default  reduce using rule 18 (INSTRUCTION)


State 44

   24 DECLARATION: TYPES . ID '=' EXP

    ID  shift, and go to state 73


State 45

   19 INSTRUCTION: CALL_INST .

    $default  reduce using rule 19 (INSTRUCTION)


State 46

    6 FUNCTION: TYPES ID PARA PARC LLAVA LIST_INST . LLAVC
   10 LIST_INST: LIST_INST . INSTRUCTION

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    LLAVC    shift, and go to state 74
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    INSTRUCTION         go to state 68
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 47

    5 FUNCTION: TYPES ID PARA FUNC_LIST PARC LLAVA . LIST_INST LLAVC

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    LIST_INST           go to state 75
    INSTRUCTION         go to state 35
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 48

    7 FUNC_LIST: FUNC_LIST ',' TYPES . ID

    ID  shift, and go to state 76


State 49

   72 CALL_INST: ID PARA . EXP_LIST PARC ';'
   73          | ID PARA . PARC ';'

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    PARC    shift, and go to state 77
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP_LIST   go to state 78
    EXP        go to state 79
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 50

   25 ASSIGNMENT: ID '=' . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 80
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 51

   23 PRINT: PRINTF PARA . EXP PARC

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 81
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 52

   61 PRIMITIVE: NUMERO .

    $default  reduce using rule 61 (PRIMITIVE)


State 53

   69 LIST_ARR: ID .
   70 CALL_EXP: ID . PARA EXP_LIST PARC
   71         | ID . PARA PARC

    PARA  shift, and go to state 82

    $default  reduce using rule 69 (LIST_ARR)


State 54

   62 PRIMITIVE: STRING .

    $default  reduce using rule 62 (PRIMITIVE)


State 55

   57 EXP: PARA . EXP PARC

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 83
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 56

   58 EXP: LLAVA . EXP_LIST LLAVC

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP_LIST   go to state 84
    EXP        go to state 79
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 57

   65 BOOL: RTRUE .

    $default  reduce using rule 65 (BOOL)


State 58

   66 BOOL: RFALSE .

    $default  reduce using rule 66 (BOOL)


State 59

   26 IF: RIF EXP . LLAVA LIST_INST LLAVC ELSEIF_LIST ELSE
   27   | RIF EXP . LLAVA LIST_INST LLAVC ELSE
   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    LLAVA   shift, and go to state 89
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93
    DIF     shift, and go to state 94
    IG      shift, and go to state 95
    AND     shift, and go to state 96
    OR      shift, and go to state 97


State 60

   59 EXP: PRIMITIVE .

    $default  reduce using rule 59 (EXP)


State 61

   63 PRIMITIVE: BOOL .

    $default  reduce using rule 63 (PRIMITIVE)


State 62

   64 PRIMITIVE: LIST_ARR .
   67 LIST_ARR: LIST_ARR . CORA EXP CORC
   68         | LIST_ARR . '.' ID

    CORA  shift, and go to state 98
    '.'   shift, and go to state 99

    $default  reduce using rule 64 (PRIMITIVE)


State 63

   60 EXP: CALL_EXP .

    $default  reduce using rule 60 (EXP)


State 64

   34 STRUCT_DECLARATION: STRUCT ID . LLAVA DEC_LIST LLAVC
   37 STRUCT_CREATION: STRUCT ID . ID '=' LLAVA EXP_LIST LLAVC

    ID     shift, and go to state 100
    LLAVA  shift, and go to state 101


State 65

   21 RETURN: RRETURN EXP .
   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93
    DIF     shift, and go to state 94
    IG      shift, and go to state 95
    AND     shift, and go to state 96
    OR      shift, and go to state 97

    $default  reduce using rule 21 (RETURN)


State 66

   33 WHILE: RWHILE EXP . LLAVA LIST_INST LLAVC
   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    LLAVA   shift, and go to state 102
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93
    DIF     shift, and go to state 94
    IG      shift, and go to state 95
    AND     shift, and go to state 96
    OR      shift, and go to state 97


State 67

    9 MAIN: VOID RMAIN PARA PARC LLAVA LIST_INST LLAVC .

    $default  reduce using rule 9 (MAIN)


State 68

   10 LIST_INST: LIST_INST INSTRUCTION .

    $default  reduce using rule 10 (LIST_INST)


State 69

   20 INSTRUCTION: RETURN ';' .

    $default  reduce using rule 20 (INSTRUCTION)


State 70

   12 INSTRUCTION: PRINT ';' .

    $default  reduce using rule 12 (INSTRUCTION)


State 71

   13 INSTRUCTION: DECLARATION ';' .

    $default  reduce using rule 13 (INSTRUCTION)


State 72

   14 INSTRUCTION: ASSIGNMENT ';' .

    $default  reduce using rule 14 (INSTRUCTION)


State 73

   24 DECLARATION: TYPES ID . '=' EXP

    '='  shift, and go to state 103


State 74

    6 FUNCTION: TYPES ID PARA PARC LLAVA LIST_INST LLAVC .

    $default  reduce using rule 6 (FUNCTION)


State 75

    5 FUNCTION: TYPES ID PARA FUNC_LIST PARC LLAVA LIST_INST . LLAVC
   10 LIST_INST: LIST_INST . INSTRUCTION

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    LLAVC    shift, and go to state 104
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    INSTRUCTION         go to state 68
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 76

    7 FUNC_LIST: FUNC_LIST ',' TYPES ID .

    $default  reduce using rule 7 (FUNC_LIST)


State 77

   73 CALL_INST: ID PARA PARC . ';'

    ';'  shift, and go to state 105


State 78

   38 EXP_LIST: EXP_LIST . ',' EXP
   72 CALL_INST: ID PARA EXP_LIST . PARC ';'

    PARC  shift, and go to state 106
    ','   shift, and go to state 107


State 79

   39 EXP_LIST: EXP .
   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93
    DIF     shift, and go to state 94
    IG      shift, and go to state 95
    AND     shift, and go to state 96
    OR      shift, and go to state 97

    $default  reduce using rule 39 (EXP_LIST)


State 80

   25 ASSIGNMENT: ID '=' EXP .
   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93
    DIF     shift, and go to state 94
    IG      shift, and go to state 95
    AND     shift, and go to state 96
    OR      shift, and go to state 97

    $default  reduce using rule 25 (ASSIGNMENT)


State 81

   23 PRINT: PRINTF PARA EXP . PARC
   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    PARC    shift, and go to state 108
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93
    DIF     shift, and go to state 94
    IG      shift, and go to state 95
    AND     shift, and go to state 96
    OR      shift, and go to state 97


State 82

   70 CALL_EXP: ID PARA . EXP_LIST PARC
   71         | ID PARA . PARC

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    PARC    shift, and go to state 109
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP_LIST   go to state 110
    EXP        go to state 79
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 83

   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP
   57    | PARA EXP . PARC

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    PARC    shift, and go to state 111
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93
    DIF     shift, and go to state 94
    IG      shift, and go to state 95
    AND     shift, and go to state 96
    OR      shift, and go to state 97


State 84

   38 EXP_LIST: EXP_LIST . ',' EXP
   58 EXP: LLAVA EXP_LIST . LLAVC

    LLAVC  shift, and go to state 112
    ','    shift, and go to state 107


State 85

   45 EXP: EXP SUMA . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 113
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 86

   46 EXP: EXP MENOS . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 114
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 87

   47 EXP: EXP POR . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 115
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 88

   48 EXP: EXP DIV . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 116
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 89

   26 IF: RIF EXP LLAVA . LIST_INST LLAVC ELSEIF_LIST ELSE
   27   | RIF EXP LLAVA . LIST_INST LLAVC ELSE

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    LIST_INST           go to state 117
    INSTRUCTION         go to state 35
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 90

   50 EXP: EXP MAY . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 118
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 91

   49 EXP: EXP MEN . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 119
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 92

   52 EXP: EXP MAY_IG . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 120
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 93

   51 EXP: EXP MEN_IG . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 121
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 94

   53 EXP: EXP DIF . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 122
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 95

   54 EXP: EXP IG . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 123
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 96

   55 EXP: EXP AND . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 124
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 97

   56 EXP: EXP OR . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 125
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 98

   67 LIST_ARR: LIST_ARR CORA . EXP CORC

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 126
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 99

   68 LIST_ARR: LIST_ARR '.' . ID

    ID  shift, and go to state 127


State 100

   37 STRUCT_CREATION: STRUCT ID ID . '=' LLAVA EXP_LIST LLAVC

    '='  shift, and go to state 128


State 101

   34 STRUCT_DECLARATION: STRUCT ID LLAVA . DEC_LIST LLAVC

    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    ARRAY    shift, and go to state 5

    DEC_LIST  go to state 129
    TYPES     go to state 130


State 102

   33 WHILE: RWHILE EXP LLAVA . LIST_INST LLAVC

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    LIST_INST           go to state 131
    INSTRUCTION         go to state 35
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 103

   24 DECLARATION: TYPES ID '=' . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 132
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 104

    5 FUNCTION: TYPES ID PARA FUNC_LIST PARC LLAVA LIST_INST LLAVC .

    $default  reduce using rule 5 (FUNCTION)


State 105

   73 CALL_INST: ID PARA PARC ';' .

    $default  reduce using rule 73 (CALL_INST)


State 106

   72 CALL_INST: ID PARA EXP_LIST PARC . ';'

    ';'  shift, and go to state 133


State 107

   38 EXP_LIST: EXP_LIST ',' . EXP

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 134
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 108

   23 PRINT: PRINTF PARA EXP PARC .

    $default  reduce using rule 23 (PRINT)


State 109

   71 CALL_EXP: ID PARA PARC .

    $default  reduce using rule 71 (CALL_EXP)


State 110

   38 EXP_LIST: EXP_LIST . ',' EXP
   70 CALL_EXP: ID PARA EXP_LIST . PARC

    PARC  shift, and go to state 135
    ','   shift, and go to state 107


State 111

   57 EXP: PARA EXP PARC .

    $default  reduce using rule 57 (EXP)


State 112

   58 EXP: LLAVA EXP_LIST LLAVC .

    $default  reduce using rule 58 (EXP)


State 113

   45 EXP: EXP . SUMA EXP
   45    | EXP SUMA EXP .
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    POR  shift, and go to state 87
    DIV  shift, and go to state 88

    $default  reduce using rule 45 (EXP)


State 114

   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   46    | EXP MENOS EXP .
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    POR  shift, and go to state 87
    DIV  shift, and go to state 88

    $default  reduce using rule 46 (EXP)


State 115

   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   47    | EXP POR EXP .
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    $default  reduce using rule 47 (EXP)


State 116

   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   48    | EXP DIV EXP .
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    $default  reduce using rule 48 (EXP)


State 117

   10 LIST_INST: LIST_INST . INSTRUCTION
   26 IF: RIF EXP LLAVA LIST_INST . LLAVC ELSEIF_LIST ELSE
   27   | RIF EXP LLAVA LIST_INST . LLAVC ELSE

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    LLAVC    shift, and go to state 136
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    INSTRUCTION         go to state 68
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 118

   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   50    | EXP MAY EXP .
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA   shift, and go to state 85
    MENOS  shift, and go to state 86
    POR    shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 50 (EXP)


State 119

   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   49    | EXP MEN EXP .
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA   shift, and go to state 85
    MENOS  shift, and go to state 86
    POR    shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 49 (EXP)


State 120

   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   52    | EXP MAY_IG EXP .
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA   shift, and go to state 85
    MENOS  shift, and go to state 86
    POR    shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 52 (EXP)


State 121

   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   51    | EXP MEN_IG EXP .
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA   shift, and go to state 85
    MENOS  shift, and go to state 86
    POR    shift, and go to state 87
    DIV    shift, and go to state 88

    $default  reduce using rule 51 (EXP)


State 122

   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   53    | EXP DIF EXP .
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93

    $default  reduce using rule 53 (EXP)


State 123

   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   54    | EXP IG EXP .
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93

    $default  reduce using rule 54 (EXP)


State 124

   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   55    | EXP AND EXP .
   56    | EXP . OR EXP

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93
    DIF     shift, and go to state 94
    IG      shift, and go to state 95

    $default  reduce using rule 55 (EXP)


State 125

   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP
   56    | EXP OR EXP .

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93
    DIF     shift, and go to state 94
    IG      shift, and go to state 95

    $default  reduce using rule 56 (EXP)


State 126

   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP
   67 LIST_ARR: LIST_ARR CORA EXP . CORC

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    CORC    shift, and go to state 137
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93
    DIF     shift, and go to state 94
    IG      shift, and go to state 95
    AND     shift, and go to state 96
    OR      shift, and go to state 97


State 127

   68 LIST_ARR: LIST_ARR '.' ID .

    $default  reduce using rule 68 (LIST_ARR)


State 128

   37 STRUCT_CREATION: STRUCT ID ID '=' . LLAVA EXP_LIST LLAVC

    LLAVA  shift, and go to state 138


State 129

   34 STRUCT_DECLARATION: STRUCT ID LLAVA DEC_LIST . LLAVC
   35 DEC_LIST: DEC_LIST . TYPES ID ';'

    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    LLAVC    shift, and go to state 139
    ARRAY    shift, and go to state 5

    TYPES  go to state 140


State 130

   36 DEC_LIST: TYPES . ID ';'

    ID  shift, and go to state 141


State 131

   10 LIST_INST: LIST_INST . INSTRUCTION
   33 WHILE: RWHILE EXP LLAVA LIST_INST . LLAVC

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    LLAVC    shift, and go to state 142
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    INSTRUCTION         go to state 68
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 132

   24 DECLARATION: TYPES ID '=' EXP .
   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93
    DIF     shift, and go to state 94
    IG      shift, and go to state 95
    AND     shift, and go to state 96
    OR      shift, and go to state 97

    $default  reduce using rule 24 (DECLARATION)


State 133

   72 CALL_INST: ID PARA EXP_LIST PARC ';' .

    $default  reduce using rule 72 (CALL_INST)


State 134

   38 EXP_LIST: EXP_LIST ',' EXP .
   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93
    DIF     shift, and go to state 94
    IG      shift, and go to state 95
    AND     shift, and go to state 96
    OR      shift, and go to state 97

    $default  reduce using rule 38 (EXP_LIST)


State 135

   70 CALL_EXP: ID PARA EXP_LIST PARC .

    $default  reduce using rule 70 (CALL_EXP)


State 136

   26 IF: RIF EXP LLAVA LIST_INST LLAVC . ELSEIF_LIST ELSE
   27   | RIF EXP LLAVA LIST_INST LLAVC . ELSE

    RELSE  shift, and go to state 143

    $default  reduce using rule 32 (ELSE)

    ELSEIF_LIST  go to state 144
    ELSEIF       go to state 145
    ELSE         go to state 146


State 137

   67 LIST_ARR: LIST_ARR CORA EXP CORC .

    $default  reduce using rule 67 (LIST_ARR)


State 138

   37 STRUCT_CREATION: STRUCT ID ID '=' LLAVA . EXP_LIST LLAVC

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP_LIST   go to state 147
    EXP        go to state 79
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 139

   34 STRUCT_DECLARATION: STRUCT ID LLAVA DEC_LIST LLAVC .

    $default  reduce using rule 34 (STRUCT_DECLARATION)


State 140

   35 DEC_LIST: DEC_LIST TYPES . ID ';'

    ID  shift, and go to state 148


State 141

   36 DEC_LIST: TYPES ID . ';'

    ';'  shift, and go to state 149


State 142

   33 WHILE: RWHILE EXP LLAVA LIST_INST LLAVC .

    $default  reduce using rule 33 (WHILE)


State 143

   30 ELSEIF: RELSE . RIF EXP LLAVA LIST_INST LLAVC
   31 ELSE: RELSE . LLAVA LIST_INST LLAVC

    RIF    shift, and go to state 150
    LLAVA  shift, and go to state 151


State 144

   26 IF: RIF EXP LLAVA LIST_INST LLAVC ELSEIF_LIST . ELSE
   28 ELSEIF_LIST: ELSEIF_LIST . ELSEIF

    RELSE  shift, and go to state 143

    $default  reduce using rule 32 (ELSE)

    ELSEIF  go to state 152
    ELSE    go to state 153


State 145

   29 ELSEIF_LIST: ELSEIF .

    $default  reduce using rule 29 (ELSEIF_LIST)


State 146

   27 IF: RIF EXP LLAVA LIST_INST LLAVC ELSE .

    $default  reduce using rule 27 (IF)


State 147

   37 STRUCT_CREATION: STRUCT ID ID '=' LLAVA EXP_LIST . LLAVC
   38 EXP_LIST: EXP_LIST . ',' EXP

    LLAVC  shift, and go to state 154
    ','    shift, and go to state 107


State 148

   35 DEC_LIST: DEC_LIST TYPES ID . ';'

    ';'  shift, and go to state 155


State 149

   36 DEC_LIST: TYPES ID ';' .

    $default  reduce using rule 36 (DEC_LIST)


State 150

   30 ELSEIF: RELSE RIF . EXP LLAVA LIST_INST LLAVC

    NUMERO  shift, and go to state 52
    ID      shift, and go to state 53
    STRING  shift, and go to state 54
    PARA    shift, and go to state 55
    LLAVA   shift, and go to state 56
    RTRUE   shift, and go to state 57
    RFALSE  shift, and go to state 58

    EXP        go to state 156
    PRIMITIVE  go to state 60
    BOOL       go to state 61
    LIST_ARR   go to state 62
    CALL_EXP   go to state 63


State 151

   31 ELSE: RELSE LLAVA . LIST_INST LLAVC

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    LIST_INST           go to state 157
    INSTRUCTION         go to state 35
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 152

   28 ELSEIF_LIST: ELSEIF_LIST ELSEIF .

    $default  reduce using rule 28 (ELSEIF_LIST)


State 153

   26 IF: RIF EXP LLAVA LIST_INST LLAVC ELSEIF_LIST ELSE .

    $default  reduce using rule 26 (IF)


State 154

   37 STRUCT_CREATION: STRUCT ID ID '=' LLAVA EXP_LIST LLAVC .

    $default  reduce using rule 37 (STRUCT_CREATION)


State 155

   35 DEC_LIST: DEC_LIST TYPES ID ';' .

    $default  reduce using rule 35 (DEC_LIST)


State 156

   30 ELSEIF: RELSE RIF EXP . LLAVA LIST_INST LLAVC
   45 EXP: EXP . SUMA EXP
   46    | EXP . MENOS EXP
   47    | EXP . POR EXP
   48    | EXP . DIV EXP
   49    | EXP . MEN EXP
   50    | EXP . MAY EXP
   51    | EXP . MEN_IG EXP
   52    | EXP . MAY_IG EXP
   53    | EXP . DIF EXP
   54    | EXP . IG EXP
   55    | EXP . AND EXP
   56    | EXP . OR EXP

    SUMA    shift, and go to state 85
    MENOS   shift, and go to state 86
    POR     shift, and go to state 87
    DIV     shift, and go to state 88
    LLAVA   shift, and go to state 158
    MAY     shift, and go to state 90
    MEN     shift, and go to state 91
    MAY_IG  shift, and go to state 92
    MEN_IG  shift, and go to state 93
    DIF     shift, and go to state 94
    IG      shift, and go to state 95
    AND     shift, and go to state 96
    OR      shift, and go to state 97


State 157

   10 LIST_INST: LIST_INST . INSTRUCTION
   31 ELSE: RELSE LLAVA LIST_INST . LLAVC

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    LLAVC    shift, and go to state 159
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    INSTRUCTION         go to state 68
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 158

   30 ELSEIF: RELSE RIF EXP LLAVA . LIST_INST LLAVC

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    LIST_INST           go to state 160
    INSTRUCTION         go to state 35
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 159

   31 ELSE: RELSE LLAVA LIST_INST LLAVC .

    $default  reduce using rule 31 (ELSE)


State 160

   10 LIST_INST: LIST_INST . INSTRUCTION
   30 ELSEIF: RELSE RIF EXP LLAVA LIST_INST . LLAVC

    ID       shift, and go to state 28
    PRINTF   shift, and go to state 29
    RIF      shift, and go to state 30
    VOID     shift, and go to state 19
    INT      shift, and go to state 2
    TSTRING  shift, and go to state 3
    BOOLEAN  shift, and go to state 4
    LLAVC    shift, and go to state 161
    STRUCT   shift, and go to state 31
    RRETURN  shift, and go to state 32
    ARRAY    shift, and go to state 5
    RWHILE   shift, and go to state 33

    INSTRUCTION         go to state 68
    RETURN              go to state 36
    PRINT               go to state 37
    DECLARATION         go to state 38
    ASSIGNMENT          go to state 39
    IF                  go to state 40
    WHILE               go to state 41
    STRUCT_DECLARATION  go to state 42
    STRUCT_CREATION     go to state 43
    TYPES               go to state 44
    CALL_INST           go to state 45


State 161

   30 ELSEIF: RELSE RIF EXP LLAVA LIST_INST LLAVC .

    $default  reduce using rule 30 (ELSEIF)
