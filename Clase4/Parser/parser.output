Grammar

    0 $accept: START END

    1 START: MAIN

    2 MAIN: VOID RMAIN PARA PARC LLAVA LIST_INST LLAVC

    3 LIST_INST: LIST_INST INSTRUCTION
    4          | INSTRUCTION

    5 INSTRUCTION: PRINT ';'
    6            | DECLARATION ';'
    7            | IF

    8 PRINT: PRINTF PARA EXP PARC

    9 DECLARATION: TYPES ID '=' EXP

   10 IF: RIF EXP LLAVA LIST_INST LLAVC ELSEIF_LIST ELSE
   11   | RIF EXP LLAVA LIST_INST LLAVC ELSE

   12 ELSEIF_LIST: ELSEIF_LIST ELSEIF
   13            | ELSEIF

   14 ELSEIF: RELSE RIF EXP LLAVA LIST_INST LLAVC

   15 ELSE: RELSE LLAVA LIST_INST LLAVC
   16     | %empty

   17 TYPES: INT
   18      | TSTRING
   19      | BOOLEAN

   20 EXP: EXP SUMA EXP
   21    | EXP MENOS EXP
   22    | EXP POR EXP
   23    | EXP DIV EXP
   24    | EXP MEN EXP
   25    | EXP MAY EXP
   26    | EXP MEN_IG EXP
   27    | EXP MAY_IG EXP
   28    | EXP DIF EXP
   29    | EXP IG EXP
   30    | EXP AND EXP
   31    | EXP OR EXP
   32    | PARA EXP PARC
   33    | PRIMITIVE

   34 PRIMITIVE: NUMERO
   35          | STRING
   36          | BOOL
   37          | LIST_ARR

   38 BOOL: RTRUE
   39     | RFALSE

   40 LIST_ARR: LIST_ARR CORA EXP CORC
   41         | ID


Terminals, with rules where they appear

    END (0) 0
    ';' (59) 5 6
    '=' (61) 9
    error (256)
    NUMERO <std::string> (258) 34
    ID <std::string> (259) 9 41
    STRING <std::string> (260) 35
    SUMA <std::string> (261) 20
    MENOS <std::string> (262) 21
    POR <std::string> (263) 22
    DIV <std::string> (264) 23
    PRINTF <std::string> (265) 8
    RIF <std::string> (266) 10 11 14
    RELSE <std::string> (267) 14 15
    VOID <std::string> (268) 2
    INT <std::string> (269) 17
    TSTRING <std::string> (270) 18
    BOOLEAN <std::string> (271) 19
    PARA <std::string> (272) 2 8 32
    PARC <std::string> (273) 2 8 32
    RMAIN <std::string> (274) 2
    LLAVA <std::string> (275) 2 10 11 14 15
    LLAVC <std::string> (276) 2 10 11 14 15
    RTRUE <std::string> (277) 38
    RFALSE <std::string> (278) 39
    CORA <std::string> (279) 40
    CORC <std::string> (280) 40
    MAY <std::string> (281) 25
    MEN <std::string> (282) 24
    MAY_IG <std::string> (283) 27
    MEN_IG <std::string> (284) 26
    DIF <std::string> (285) 28
    IG <std::string> (286) 29
    AND <std::string> (287) 30
    OR <std::string> (288) 31


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    START <func_main*> (37)
        on left: 1
        on right: 0
    MAIN <func_main*> (38)
        on left: 2
        on right: 1
    LIST_INST <list_instruction*> (39)
        on left: 3 4
        on right: 2 3 10 11 14 15
    INSTRUCTION <instruction*> (40)
        on left: 5 6 7
        on right: 3 4
    PRINT <instruction*> (41)
        on left: 8
        on right: 5
    DECLARATION <instruction*> (42)
        on left: 9
        on right: 6
    IF <instruction*> (43)
        on left: 10 11
        on right: 7
    ELSEIF_LIST <list_instruction*> (44)
        on left: 12 13
        on right: 10 12
    ELSEIF <instruction*> (45)
        on left: 14
        on right: 12 13
    ELSE <list_instruction*> (46)
        on left: 15 16
        on right: 10 11
    TYPES <TipoDato> (47)
        on left: 17 18 19
        on right: 9
    EXP <expression*> (48)
        on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33
        on right: 8 9 10 11 14 20 21 22 23 24 25 26 27 28 29 30 31 32 40
    PRIMITIVE <expression*> (49)
        on left: 34 35 36 37
        on right: 33
    BOOL <expression*> (50)
        on left: 38 39
        on right: 36
    LIST_ARR <expression*> (51)
        on left: 40 41
        on right: 37 40


State 0

    0 $accept: . START END

    VOID  shift, and go to state 1

    START  go to state 2
    MAIN   go to state 3


State 1

    2 MAIN: VOID . RMAIN PARA PARC LLAVA LIST_INST LLAVC

    RMAIN  shift, and go to state 4


State 2

    0 $accept: START . END

    END  shift, and go to state 5


State 3

    1 START: MAIN .

    $default  reduce using rule 1 (START)


State 4

    2 MAIN: VOID RMAIN . PARA PARC LLAVA LIST_INST LLAVC

    PARA  shift, and go to state 6


State 5

    0 $accept: START END .

    $default  accept


State 6

    2 MAIN: VOID RMAIN PARA . PARC LLAVA LIST_INST LLAVC

    PARC  shift, and go to state 7


State 7

    2 MAIN: VOID RMAIN PARA PARC . LLAVA LIST_INST LLAVC

    LLAVA  shift, and go to state 8


State 8

    2 MAIN: VOID RMAIN PARA PARC LLAVA . LIST_INST LLAVC

    PRINTF   shift, and go to state 9
    RIF      shift, and go to state 10
    INT      shift, and go to state 11
    TSTRING  shift, and go to state 12
    BOOLEAN  shift, and go to state 13

    LIST_INST    go to state 14
    INSTRUCTION  go to state 15
    PRINT        go to state 16
    DECLARATION  go to state 17
    IF           go to state 18
    TYPES        go to state 19


State 9

    8 PRINT: PRINTF . PARA EXP PARC

    PARA  shift, and go to state 20


State 10

   10 IF: RIF . EXP LLAVA LIST_INST LLAVC ELSEIF_LIST ELSE
   11   | RIF . EXP LLAVA LIST_INST LLAVC ELSE

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 27
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 11

   17 TYPES: INT .

    $default  reduce using rule 17 (TYPES)


State 12

   18 TYPES: TSTRING .

    $default  reduce using rule 18 (TYPES)


State 13

   19 TYPES: BOOLEAN .

    $default  reduce using rule 19 (TYPES)


State 14

    2 MAIN: VOID RMAIN PARA PARC LLAVA LIST_INST . LLAVC
    3 LIST_INST: LIST_INST . INSTRUCTION

    PRINTF   shift, and go to state 9
    RIF      shift, and go to state 10
    INT      shift, and go to state 11
    TSTRING  shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    LLAVC    shift, and go to state 31

    INSTRUCTION  go to state 32
    PRINT        go to state 16
    DECLARATION  go to state 17
    IF           go to state 18
    TYPES        go to state 19


State 15

    4 LIST_INST: INSTRUCTION .

    $default  reduce using rule 4 (LIST_INST)


State 16

    5 INSTRUCTION: PRINT . ';'

    ';'  shift, and go to state 33


State 17

    6 INSTRUCTION: DECLARATION . ';'

    ';'  shift, and go to state 34


State 18

    7 INSTRUCTION: IF .

    $default  reduce using rule 7 (INSTRUCTION)


State 19

    9 DECLARATION: TYPES . ID '=' EXP

    ID  shift, and go to state 35


State 20

    8 PRINT: PRINTF PARA . EXP PARC

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 36
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 21

   34 PRIMITIVE: NUMERO .

    $default  reduce using rule 34 (PRIMITIVE)


State 22

   41 LIST_ARR: ID .

    $default  reduce using rule 41 (LIST_ARR)


State 23

   35 PRIMITIVE: STRING .

    $default  reduce using rule 35 (PRIMITIVE)


State 24

   32 EXP: PARA . EXP PARC

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 37
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 25

   38 BOOL: RTRUE .

    $default  reduce using rule 38 (BOOL)


State 26

   39 BOOL: RFALSE .

    $default  reduce using rule 39 (BOOL)


State 27

   10 IF: RIF EXP . LLAVA LIST_INST LLAVC ELSEIF_LIST ELSE
   11   | RIF EXP . LLAVA LIST_INST LLAVC ELSE
   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    SUMA    shift, and go to state 38
    MENOS   shift, and go to state 39
    POR     shift, and go to state 40
    DIV     shift, and go to state 41
    LLAVA   shift, and go to state 42
    MAY     shift, and go to state 43
    MEN     shift, and go to state 44
    MAY_IG  shift, and go to state 45
    MEN_IG  shift, and go to state 46
    DIF     shift, and go to state 47
    IG      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 28

   33 EXP: PRIMITIVE .

    $default  reduce using rule 33 (EXP)


State 29

   36 PRIMITIVE: BOOL .

    $default  reduce using rule 36 (PRIMITIVE)


State 30

   37 PRIMITIVE: LIST_ARR .
   40 LIST_ARR: LIST_ARR . CORA EXP CORC

    CORA  shift, and go to state 51

    $default  reduce using rule 37 (PRIMITIVE)


State 31

    2 MAIN: VOID RMAIN PARA PARC LLAVA LIST_INST LLAVC .

    $default  reduce using rule 2 (MAIN)


State 32

    3 LIST_INST: LIST_INST INSTRUCTION .

    $default  reduce using rule 3 (LIST_INST)


State 33

    5 INSTRUCTION: PRINT ';' .

    $default  reduce using rule 5 (INSTRUCTION)


State 34

    6 INSTRUCTION: DECLARATION ';' .

    $default  reduce using rule 6 (INSTRUCTION)


State 35

    9 DECLARATION: TYPES ID . '=' EXP

    '='  shift, and go to state 52


State 36

    8 PRINT: PRINTF PARA EXP . PARC
   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    SUMA    shift, and go to state 38
    MENOS   shift, and go to state 39
    POR     shift, and go to state 40
    DIV     shift, and go to state 41
    PARC    shift, and go to state 53
    MAY     shift, and go to state 43
    MEN     shift, and go to state 44
    MAY_IG  shift, and go to state 45
    MEN_IG  shift, and go to state 46
    DIF     shift, and go to state 47
    IG      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 37

   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP
   32    | PARA EXP . PARC

    SUMA    shift, and go to state 38
    MENOS   shift, and go to state 39
    POR     shift, and go to state 40
    DIV     shift, and go to state 41
    PARC    shift, and go to state 54
    MAY     shift, and go to state 43
    MEN     shift, and go to state 44
    MAY_IG  shift, and go to state 45
    MEN_IG  shift, and go to state 46
    DIF     shift, and go to state 47
    IG      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 38

   20 EXP: EXP SUMA . EXP

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 55
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 39

   21 EXP: EXP MENOS . EXP

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 56
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 40

   22 EXP: EXP POR . EXP

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 57
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 41

   23 EXP: EXP DIV . EXP

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 58
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 42

   10 IF: RIF EXP LLAVA . LIST_INST LLAVC ELSEIF_LIST ELSE
   11   | RIF EXP LLAVA . LIST_INST LLAVC ELSE

    PRINTF   shift, and go to state 9
    RIF      shift, and go to state 10
    INT      shift, and go to state 11
    TSTRING  shift, and go to state 12
    BOOLEAN  shift, and go to state 13

    LIST_INST    go to state 59
    INSTRUCTION  go to state 15
    PRINT        go to state 16
    DECLARATION  go to state 17
    IF           go to state 18
    TYPES        go to state 19


State 43

   25 EXP: EXP MAY . EXP

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 60
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 44

   24 EXP: EXP MEN . EXP

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 61
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 45

   27 EXP: EXP MAY_IG . EXP

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 62
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 46

   26 EXP: EXP MEN_IG . EXP

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 63
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 47

   28 EXP: EXP DIF . EXP

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 64
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 48

   29 EXP: EXP IG . EXP

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 65
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 49

   30 EXP: EXP AND . EXP

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 66
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 50

   31 EXP: EXP OR . EXP

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 67
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 51

   40 LIST_ARR: LIST_ARR CORA . EXP CORC

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 68
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 52

    9 DECLARATION: TYPES ID '=' . EXP

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 69
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 53

    8 PRINT: PRINTF PARA EXP PARC .

    $default  reduce using rule 8 (PRINT)


State 54

   32 EXP: PARA EXP PARC .

    $default  reduce using rule 32 (EXP)


State 55

   20 EXP: EXP . SUMA EXP
   20    | EXP SUMA EXP .
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    POR  shift, and go to state 40
    DIV  shift, and go to state 41

    $default  reduce using rule 20 (EXP)


State 56

   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   21    | EXP MENOS EXP .
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    POR  shift, and go to state 40
    DIV  shift, and go to state 41

    $default  reduce using rule 21 (EXP)


State 57

   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   22    | EXP POR EXP .
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    $default  reduce using rule 22 (EXP)


State 58

   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   23    | EXP DIV EXP .
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    $default  reduce using rule 23 (EXP)


State 59

    3 LIST_INST: LIST_INST . INSTRUCTION
   10 IF: RIF EXP LLAVA LIST_INST . LLAVC ELSEIF_LIST ELSE
   11   | RIF EXP LLAVA LIST_INST . LLAVC ELSE

    PRINTF   shift, and go to state 9
    RIF      shift, and go to state 10
    INT      shift, and go to state 11
    TSTRING  shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    LLAVC    shift, and go to state 70

    INSTRUCTION  go to state 32
    PRINT        go to state 16
    DECLARATION  go to state 17
    IF           go to state 18
    TYPES        go to state 19


State 60

   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   25    | EXP MAY EXP .
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    SUMA   shift, and go to state 38
    MENOS  shift, and go to state 39
    POR    shift, and go to state 40
    DIV    shift, and go to state 41

    $default  reduce using rule 25 (EXP)


State 61

   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   24    | EXP MEN EXP .
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    SUMA   shift, and go to state 38
    MENOS  shift, and go to state 39
    POR    shift, and go to state 40
    DIV    shift, and go to state 41

    $default  reduce using rule 24 (EXP)


State 62

   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   27    | EXP MAY_IG EXP .
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    SUMA   shift, and go to state 38
    MENOS  shift, and go to state 39
    POR    shift, and go to state 40
    DIV    shift, and go to state 41

    $default  reduce using rule 27 (EXP)


State 63

   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   26    | EXP MEN_IG EXP .
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    SUMA   shift, and go to state 38
    MENOS  shift, and go to state 39
    POR    shift, and go to state 40
    DIV    shift, and go to state 41

    $default  reduce using rule 26 (EXP)


State 64

   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   28    | EXP DIF EXP .
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    SUMA    shift, and go to state 38
    MENOS   shift, and go to state 39
    POR     shift, and go to state 40
    DIV     shift, and go to state 41
    MAY     shift, and go to state 43
    MEN     shift, and go to state 44
    MAY_IG  shift, and go to state 45
    MEN_IG  shift, and go to state 46

    $default  reduce using rule 28 (EXP)


State 65

   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   29    | EXP IG EXP .
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    SUMA    shift, and go to state 38
    MENOS   shift, and go to state 39
    POR     shift, and go to state 40
    DIV     shift, and go to state 41
    MAY     shift, and go to state 43
    MEN     shift, and go to state 44
    MAY_IG  shift, and go to state 45
    MEN_IG  shift, and go to state 46

    $default  reduce using rule 29 (EXP)


State 66

   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   30    | EXP AND EXP .
   31    | EXP . OR EXP

    SUMA    shift, and go to state 38
    MENOS   shift, and go to state 39
    POR     shift, and go to state 40
    DIV     shift, and go to state 41
    MAY     shift, and go to state 43
    MEN     shift, and go to state 44
    MAY_IG  shift, and go to state 45
    MEN_IG  shift, and go to state 46
    DIF     shift, and go to state 47
    IG      shift, and go to state 48

    $default  reduce using rule 30 (EXP)


State 67

   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP
   31    | EXP OR EXP .

    SUMA    shift, and go to state 38
    MENOS   shift, and go to state 39
    POR     shift, and go to state 40
    DIV     shift, and go to state 41
    MAY     shift, and go to state 43
    MEN     shift, and go to state 44
    MAY_IG  shift, and go to state 45
    MEN_IG  shift, and go to state 46
    DIF     shift, and go to state 47
    IG      shift, and go to state 48

    $default  reduce using rule 31 (EXP)


State 68

   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP
   40 LIST_ARR: LIST_ARR CORA EXP . CORC

    SUMA    shift, and go to state 38
    MENOS   shift, and go to state 39
    POR     shift, and go to state 40
    DIV     shift, and go to state 41
    CORC    shift, and go to state 71
    MAY     shift, and go to state 43
    MEN     shift, and go to state 44
    MAY_IG  shift, and go to state 45
    MEN_IG  shift, and go to state 46
    DIF     shift, and go to state 47
    IG      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 69

    9 DECLARATION: TYPES ID '=' EXP .
   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    SUMA    shift, and go to state 38
    MENOS   shift, and go to state 39
    POR     shift, and go to state 40
    DIV     shift, and go to state 41
    MAY     shift, and go to state 43
    MEN     shift, and go to state 44
    MAY_IG  shift, and go to state 45
    MEN_IG  shift, and go to state 46
    DIF     shift, and go to state 47
    IG      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 9 (DECLARATION)


State 70

   10 IF: RIF EXP LLAVA LIST_INST LLAVC . ELSEIF_LIST ELSE
   11   | RIF EXP LLAVA LIST_INST LLAVC . ELSE

    RELSE  shift, and go to state 72

    $default  reduce using rule 16 (ELSE)

    ELSEIF_LIST  go to state 73
    ELSEIF       go to state 74
    ELSE         go to state 75


State 71

   40 LIST_ARR: LIST_ARR CORA EXP CORC .

    $default  reduce using rule 40 (LIST_ARR)


State 72

   14 ELSEIF: RELSE . RIF EXP LLAVA LIST_INST LLAVC
   15 ELSE: RELSE . LLAVA LIST_INST LLAVC

    RIF    shift, and go to state 76
    LLAVA  shift, and go to state 77


State 73

   10 IF: RIF EXP LLAVA LIST_INST LLAVC ELSEIF_LIST . ELSE
   12 ELSEIF_LIST: ELSEIF_LIST . ELSEIF

    RELSE  shift, and go to state 72

    $default  reduce using rule 16 (ELSE)

    ELSEIF  go to state 78
    ELSE    go to state 79


State 74

   13 ELSEIF_LIST: ELSEIF .

    $default  reduce using rule 13 (ELSEIF_LIST)


State 75

   11 IF: RIF EXP LLAVA LIST_INST LLAVC ELSE .

    $default  reduce using rule 11 (IF)


State 76

   14 ELSEIF: RELSE RIF . EXP LLAVA LIST_INST LLAVC

    NUMERO  shift, and go to state 21
    ID      shift, and go to state 22
    STRING  shift, and go to state 23
    PARA    shift, and go to state 24
    RTRUE   shift, and go to state 25
    RFALSE  shift, and go to state 26

    EXP        go to state 80
    PRIMITIVE  go to state 28
    BOOL       go to state 29
    LIST_ARR   go to state 30


State 77

   15 ELSE: RELSE LLAVA . LIST_INST LLAVC

    PRINTF   shift, and go to state 9
    RIF      shift, and go to state 10
    INT      shift, and go to state 11
    TSTRING  shift, and go to state 12
    BOOLEAN  shift, and go to state 13

    LIST_INST    go to state 81
    INSTRUCTION  go to state 15
    PRINT        go to state 16
    DECLARATION  go to state 17
    IF           go to state 18
    TYPES        go to state 19


State 78

   12 ELSEIF_LIST: ELSEIF_LIST ELSEIF .

    $default  reduce using rule 12 (ELSEIF_LIST)


State 79

   10 IF: RIF EXP LLAVA LIST_INST LLAVC ELSEIF_LIST ELSE .

    $default  reduce using rule 10 (IF)


State 80

   14 ELSEIF: RELSE RIF EXP . LLAVA LIST_INST LLAVC
   20 EXP: EXP . SUMA EXP
   21    | EXP . MENOS EXP
   22    | EXP . POR EXP
   23    | EXP . DIV EXP
   24    | EXP . MEN EXP
   25    | EXP . MAY EXP
   26    | EXP . MEN_IG EXP
   27    | EXP . MAY_IG EXP
   28    | EXP . DIF EXP
   29    | EXP . IG EXP
   30    | EXP . AND EXP
   31    | EXP . OR EXP

    SUMA    shift, and go to state 38
    MENOS   shift, and go to state 39
    POR     shift, and go to state 40
    DIV     shift, and go to state 41
    LLAVA   shift, and go to state 82
    MAY     shift, and go to state 43
    MEN     shift, and go to state 44
    MAY_IG  shift, and go to state 45
    MEN_IG  shift, and go to state 46
    DIF     shift, and go to state 47
    IG      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 81

    3 LIST_INST: LIST_INST . INSTRUCTION
   15 ELSE: RELSE LLAVA LIST_INST . LLAVC

    PRINTF   shift, and go to state 9
    RIF      shift, and go to state 10
    INT      shift, and go to state 11
    TSTRING  shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    LLAVC    shift, and go to state 83

    INSTRUCTION  go to state 32
    PRINT        go to state 16
    DECLARATION  go to state 17
    IF           go to state 18
    TYPES        go to state 19


State 82

   14 ELSEIF: RELSE RIF EXP LLAVA . LIST_INST LLAVC

    PRINTF   shift, and go to state 9
    RIF      shift, and go to state 10
    INT      shift, and go to state 11
    TSTRING  shift, and go to state 12
    BOOLEAN  shift, and go to state 13

    LIST_INST    go to state 84
    INSTRUCTION  go to state 15
    PRINT        go to state 16
    DECLARATION  go to state 17
    IF           go to state 18
    TYPES        go to state 19


State 83

   15 ELSE: RELSE LLAVA LIST_INST LLAVC .

    $default  reduce using rule 15 (ELSE)


State 84

    3 LIST_INST: LIST_INST . INSTRUCTION
   14 ELSEIF: RELSE RIF EXP LLAVA LIST_INST . LLAVC

    PRINTF   shift, and go to state 9
    RIF      shift, and go to state 10
    INT      shift, and go to state 11
    TSTRING  shift, and go to state 12
    BOOLEAN  shift, and go to state 13
    LLAVC    shift, and go to state 85

    INSTRUCTION  go to state 32
    PRINT        go to state 16
    DECLARATION  go to state 17
    IF           go to state 18
    TYPES        go to state 19


State 85

   14 ELSEIF: RELSE RIF EXP LLAVA LIST_INST LLAVC .

    $default  reduce using rule 14 (ELSEIF)
